#version 410
in vec4 worldNormal;
in vec4 worldPosition;
out vec4 fragColor;

uniform vec4 cameraPosition;

void main() 
{ 
	//Hardcoded light direction
	vec4 light = vec4(0.5, 0.7, 0.5, 0);

	//Diffuse
	float intensity = clamp(dot(light, worldNormal), 0, 1);

	//Specular
	vec4 toCamera = normalize(worldPosition - cameraPosition);
	vec4 refl = reflect(toCamera, worldNormal);
	float specular = clamp(dot(refl, light), 0, 1);
	//Raised to the power of two - controls highlight tightness
	specular = specular * specular;

	//Final colour
    fragColor = vec4(intensity+specular, intensity+specular, intensity+specular, 1); 
}